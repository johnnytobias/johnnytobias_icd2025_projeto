---
title: "Avaliação 2 - Valor: 33 pontos"
subtitle: "Introdução à Ciência de Dados - 2025 <br> Bacharelado em Administração"
author:   
  - Membro 1   
  - Membro 2
  - Membro 3
title-block-banner: "#27445C"
format:
  html:
    embed-resources: true
    page-layout: article
    toc: true
    toc-location: left
lang: "pt"
date: 2025-06-18
date-format: long
execute:
  echo: true
  warning: false
  message: false
---


```{r}
#| label: setup
#| echo: false

# pacotes utilizados
library(here)
library(tidyverse)
library(tidyquant)
library(effectsize)
```



## Questão 1

**a)**

```{r}
# insira o código aqui
prob_sinistro <- 0.01
indenizacao_media <- 150000

premio_puro <- prob_sinistro * indenizacao_media

premio_puro

```


**b)**

```{r}
# insira o código aqui
margem <- 0.25
premio_puro <- prob_sinistro * indenizacao_media

# Cálculo do prêmio comercial
premio_comercial <- premio_puro * (1 + margem)

# Exibir os resultados
premio_puro
premio_comercial
```


**c)** 

Simulação dos custos médios com 10 residências seguradas:

```{r}
## fixa a semente para reprodutibilidade
set.seed(2025)

## simula o custo para 10 residências seguradas
custos_10 <- sample(
  c(0,150000),        # preencha com os dois valores de custos possíveis: sem sinistro e com sinistro
  size = 10,          # número total de residências a serem simuladas
  replace = TRUE,       # indique se a amostragem será com reposição
  prob = c(0.99,0.01)  # probabilidades de cada um dos dois resultados (sinistro e não sinistro)
  ) 

## estimativa do custo médio por apólice com 10 residências seguradas
mean(custos_10)         # função para calcular a média do vetor simulado
```


Simulação dos custos médios com 100 residências seguradas:

```{r}
## fixa a semente para reprodutibilidade
set.seed(2025)

## simula o custo para 10 residências seguradas
custos_10 <- sample(
  c(0,150000),        # preencha com os dois valores de custos possíveis: sem sinistro e com sinistro
  size = 100,          # número total de residências a serem simuladas
  replace = TRUE,       # indique se a amostragem será com reposição
  prob = c(0.99,0.01)  # probabilidades de cada um dos dois resultados (sinistro e não sinistro)
  ) 

## estimativa do custo médio por apólice com 10 residências seguradas
mean(custos_10)         # função para calcular a média do vetor simulado
```


Simulação dos custos médios com 1000 residências seguradas:

```{r}
## fixa a semente para reprodutibilidade
set.seed(2025)

## simula o custo para 10 residências seguradas
custos_10 <- sample(
  c(0,150000),        # preencha com os dois valores de custos possíveis: sem sinistro e com sinistro
  size = 1000,          # número total de residências a serem simuladas
  replace = TRUE,       # indique se a amostragem será com reposição
  prob = c(0.99,0.01)  # probabilidades de cada um dos dois resultados (sinistro e não sinistro)
  ) 

## estimativa do custo médio por apólice com 10 residências seguradas
mean(custos_10)         # função para calcular a média do vetor simulado
```



**d)**
observamos a 



**e)**





## Questão 2

**a)** 

```{r}
# insira o código aqui
```


**b)** 

```{r}
# insira o código aqui
```


**c)** 

```{r}
# insira o código aqui
```





## Questão 3


**a)** 

```{r}
# insira o código aqui
```

Reposta:


**b)** 

```{r}
# insira o código aqui
```


Reposta:


**c)**



**d)** 





## Questão 4

**a)**

```{r}
```

Cálculo do VaR 99% percentual:

```{r}

valor_investido <- 400000
retorno_medio <- 0.011
volatilidade <- 0.042
z_99 <- -2.326

```

Cálculo do VaR 99% monetário (valor absoluto da perda):

```{r}
# insira o código aqui
```



**b)**



**c)**





## Questão 5

- [ ] A 

- [ ] B 

- [ ] C 

- [ ] D 

- [ ] E 


Por que as demais estão erradas?

- **Letra** - 
  
- **Letra** - 
  
- **Letra** - 
  
- **Letra** - 





## Questão 6


**a)** 


```{r}
dados_precos <- c("PETR4.SA", "WEGE3.SA") %>%
  tq_get(from = "2024-01-01") %>%
  select(symbol, date, close) %>%
  pivot_wider(names_from = symbol, values_from = close) %>%
  rename(petrobras = `PETR4.SA`, weg = `WEGE3.SA`)

head(dados_precos)

```


**b.1)** 
   
```{r}
# cálculo dos retornos logarítmicos
dados_ret <- dados_precos %>% 
# a função `mutate()` adiciona as colunas de retornos
mutate(ret_petrobras = log(petrobras / lag(petrobras)),
     ret_weg       = log(weg       / lag(weg))) %>% 
# drop_na remove a linha com retorno faltante (NA)
drop_na()

# exibição das primeiras linhas
head(dados_ret)
```



**b.2)** 

```{r}
# insira o código aqui
# Calcular os retornos diários
dados_retornos <- dados_precos %>%
  mutate(
    ret_petrobras = (petrobras / lag(petrobras)) - 1,
    ret_weg = (weg / lag(weg)) - 1
  ) %>%
  na.omit()  # remover NA gerado pelo lag

# Estimar o coeficiente de correlação de Pearson
correlacao <- cor(dados_retornos$ret_petrobras, dados_retornos$ret_weg)

# Exibir o resultado
correlacao

```


**b.3)** 

```{r}
# insira o código aqui

# Interpretar a correlação usando critérios de Cohen
interpretacao <- interpret_r(correlacao, rules = "cohen1988")

# Exibir o resultado
interpretacao

```

**Interpretação:**



**c)** 

```{r}
# insira o código aqui
```


**Interpretação:**


**d)** 
