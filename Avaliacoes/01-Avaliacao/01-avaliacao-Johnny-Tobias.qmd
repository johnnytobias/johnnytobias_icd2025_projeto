---
title: "Resolucão da Avaliação 1"
subtitle: "Introdução à Ciência de Dados - 2025 <br> Bacharelado em Administração"
author: "Johnny Tobias de Lima"
title-block-banner: "#27445C"
format:
  html:
    embed-resources: true
    page-layout: article
    toc: true
    toc-location: left
lang: "pt"
date: 2025-05-14
date-format: long
execute: 
  eval: true
  echo: true
  warning: false
  message: false
crossref:
  fig-prefix: 'Fig.'
  tbl-prefix: 'Tab.'
---


```{r}
#| label: setup
#| echo: false

# configura a exibição de números
options(digits = 3, scipen = 99)

# pacotes utilizados
library(here)
library(tidyverse)
library(kableExtra)
```



## Questão 1 


**a)Ao entender quais os perfies dos clientes estão mais associadas à               conversão após ver anúncios em vídeo, as campanhas podem ser melhor orientadas.** 


**b)Primeira etapa analise descritiva pois é com ela que podemos analisar  quem são os nossos clientes, como compram (pagamentos, valores), como reagem aos anúncios e se devolvem produtos. É como um escaner inicial, para depois podermos investigar mais a fundo as causas e prever o futuro.** 




## Questão 2 


**a)** 

```{r}

# Importa o arquivo de dados

## 1.1 Define o caminho relativo do arquivo em seu projeto RStudio
caminho_arquivo <- here::here("dados", "brutos", "onlineshop", "onlineshop.csv")

## 1.2 Importa o arquivo com a funçào read_csv
dados_lojaonline <- readr::read_csv(caminho_arquivo)

```


**b)** 

```{r}

# Seu código aqui
glimpse(dados_lojaonline)
```


**c.1)o objeto dados_lojaonline contem Rows: 463** 



**c.2)Cada rows contem informacoes individual de cada cliente que esteve na loja online, como perfil do cliente, interacao com anuncio, compras e devolucoes.** 




## Questão 3 (8 pontos)

### Tópico: Limpeza e Preparação dos Dados 

**a)** 

```{r}

dados_lojaonline_limpos <- dados_lojaonline %>% 
    # Renomeia as colunas para nomes mais simples em português
   rename(
      data = DATE,
      id_cliente = USER_ID,
      idade = AGE,
      sexo = GENDER,
      tipo = TYPE,
      score_de_credito = CREDIT_SCORE,
      tempo_da_conta = LIFETIME,
      metodo_pagamento = PAYMENT_METHOD,
      faturamento = TURNOVER,
      devolucao = SENDBACK,
      tipo_de_anuncio = VIDEO_AD,
      convertido = CONVERTED
   ) %>% 
    # Converte cada variável para o tipo/classe adequado
   mutate(
      data = as.Date(data),
      id_cliente = as.factor(id_cliente),
      idade = as.integer(idade),
      sexo = as.factor(sexo),
      tipo = as.factor(tipo),
      score_de_credito = factor(score_de_credito, levels = 1:5, ordered = TRUE),
      tempo_da_conta =  as.integer(tempo_da_conta),
      metodo_pagamento = as.factor(metodo_pagamento),
      faturamento = as.numeric(faturamento),
      devolucao = as.logical(devolucao),
      tipo_de_anuncio = as.logical(tipo_de_anuncio),
      convertido = as.logical(convertido)
   )

# exibe a estrutura da data frame limpa
dplyr::glimpse(dados_lojaonline_limpos)
```


**b)** 

```{r}

# Seu código aqui
summary(dados_lojaonline_limpos)

```


**b.1) o cliente ron_swanson76 efetuou  15 compras**


**b.2)116 representa cada compra feita na lj ** 


**b.3) ** 

- Faturamento médio = 69.24

- Faturamento máximo = 499.9

- Faturamento mínimo = 4.50




## Questão 4 (10 pontos)

 
**a)** 


```{r}

faturamento_medio_pagamento <- dados_lojaonline_limpos %>% 
   group_by(metodo_pagamento) %>% 
   summarize(faturamento_medio =mean(faturamento)) %>% 
   arrange(desc(faturamento_medio))

# exibe o resultado
faturamento_medio_pagamento
```



**b)** 


```{r}

clientes_especificos <- dados_lojaonline_limpos %>% 
   filter(id_cliente %in% c ("ron_swanson76", "horst_luning", "dorothy_parker")) %>% 
   group_by(id_cliente) %>% 
   summarize(faturamento_medio_clientes = mean(faturamento)) %>% 
   arrange(desc(faturamento_medio_clientes))

# exibe o resultado
clientes_especificos
```



**c)** 


```{r}

dados_conversao <- dados_lojaonline_limpos %>% 
   group_by(tipo_de_anuncio) %>% 
   summarize(
      total_de_clientes = n(),
      porcentagem_de_conversao = mean(convertido),
      faturamento_medio_por_anuncio = mean(faturamento)
   )

# exibe o resultado 
dados_conversao
```



**d)** 


```{r}

analise_tipo_cliente <- dados_lojaonline_limpos %>%
  # Agrupa os dados pelo tipo de cliente
  group_by(tipo) %>%
  # Calcula as estatísticas solicitadas para cada grupo
  summarize(
    total_transacoes = n(),
    porcentagem_devolucao = mean(devolucao) * 100,  # Converte proporção para porcentagem
    faturamento_medio = mean(faturamento),
    faturamento_sem_devolucao = mean(faturamento[devolucao])
  )

# exibe o resultado 
analise_tipo_cliente
```





